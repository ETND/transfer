{"version":3,"sources":["dapp/connectors.ts","config/constants/chainId.ts","utils/rpc.ts","utils/providers.ts","hooks/useActiveWeb3React.ts","components/Header.tsx","dapp/hooks.ts","components/Footer.tsx","config/constants/contracts.ts","config/constants/defaultChainId.ts","utils/addressHelpers.ts","utils/address.ts","hooks/useContract.ts","utils/index.ts","utils/bigNumber.ts","utils/formatBalance.ts","config/tokens/index.ts","config/constants/native.ts","utils/isEth.ts","page/BatchTransfer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["injected","InjectedConnector","supportedChainIds","connectorLocalStorageKey","ChainId","RPC","ETND","simpleRpcProvider","chainId","StaticJsonRpcProvider","useActiveWeb3React","useWeb3React","library","web3React","refEth","useRef","defaultChainId","parseInt","useState","provider","setProvider","useEffect","current","Header","connector","account","activate","deactivate","activatingConnector","setActivatingConnector","undefined","triedEager","active","tried","setTried","isAuthorized","then","hasSignedIn","window","localStorage","getItem","catch","useEagerConnect","suppress","error","ethereum","on","handleConnect","console","log","handleChainChanged","handleAccountsChanged","accounts","length","handleNetworkChanged","networkId","removeListener","useInactiveListener","getAccount","useMemo","substring","className","src","alt","onClick","setItem","type","icon","SearchOutlined","String","Footer","multiTransfer","getMultiTransferAddress","address","getAddress","addresses","isAddress","value","useERC20","withSignerIfPossible","useContract","bep20Abi","ABI","AddressZero","getContract","Error","Contract","getSigner","connectUnchecked","getProviderOrSigner","BIG_ZERO","BigNumber","BIG_TEN","ethersToBigNumber","ethersBn","toString","getDecimalAmount","amount","decimals","times","pow","getBalanceAmount","dividedBy","getBalanceNumber","balance","toNumber","formatBigNumberToFixed","number","displayDecimals","formattedString","formatUnits","toFixed","TOKENLIST","NATIVE","name","symbol","logoURI","isEth","token","native","toLowerCase","Option","Select","TextArea","Input","SetInfo","prop","addressList","setAmount","setToken","tokenList","addressInput","setAddressInput","setTokenList","setAddressList","setStep","searchValue","setSearchValue","bep20Contract","getErc20Info","a","findIndex","item","errAddressList","err","forEach","index","push","map","bordered","size","showSearch","optionLabelProp","dropdownClassName","filterOption","e","currentItem","find","toLocaleLowerCase","includes","onSearch","placeholder","onChange","target","split","rows","style","width","message","TransferDetail","gasFee","setGasFee","isApproved","setIsApproved","bnbBalance","setBalance","tokenBalance","setTokenBalance","errorMessage","setErrorMessage","loading","setLoading","bep20TransferContract","bep20TransferAbi","useBep20TransferContract","estimateGas","tokenAmount","ethAmount","filterAddress","batch_transfer_bnb","_gasFee","batch_transfer","reason","data","filter","getTransferList","to","key","columns","title","dataIndex","render","record","text","danger","_addressList","splice","join","getBalance","balanceOf","getAllowance","allowance","response","currentAllowance","gt","getAllAmount","dataSource","pagination","scroll","y","ArrowLeftOutlined","tx","wait","success","approve","MaxUint256","BatchTransfer","setp","handleAddressList","handleStep","step","handleAddressInput","DEFAULT_TOKEN_LIST","_tokenList","sort","t1","t2","getLibrary","Web3Provider","pollingInterval","APP","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b266290f.chunk.js","sourcesContent":["import { InjectedConnector } from '@web3-react/injected-connector';\n\nexport const POLLING_INTERVAL = 12000;\nexport const injected = new InjectedConnector({\n  supportedChainIds: [131419],\n});\nexport const connectorLocalStorageKey = 'connectorId';\n","export enum ChainId {\n  ETND = 131419,\n}\n","import { ChainId } from '@/config/constants/chainId';\nconst RPC = {\n  [ChainId.ETND]: 'https://rpc.node1.etnd.pro',\n};\n\nexport default RPC;\n","import { StaticJsonRpcProvider } from '@ethersproject/providers';\nimport RPC from './rpc';\nimport { ChainId } from '@/config/constants/chainId';\n\nconst getRpcUrl = (chainId) => {\n  return new StaticJsonRpcProvider(RPC[chainId] ? RPC[chainId] : RPC[ChainId.ETND]);\n};\n\nexport const simpleRpcProvider = getRpcUrl;\n\nexport default null;\n","import { useEffect, useState, useRef } from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport { Web3Provider } from '@ethersproject/providers';\nimport { simpleRpcProvider } from '../utils/providers';\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types';\n\n/**\n * Provides a web3 provider with or without user's signer\n * Recreate web3 instance only if the provider change\n */\nconst useActiveWeb3React = (): Web3ReactContextInterface<Web3Provider> => {\n  const { library, chainId, ...web3React } = useWeb3React();\n  const refEth = useRef(library);\n  const defaultChainId = chainId ?? parseInt('4', 10);\n  const [provider, setProvider] = useState(library || simpleRpcProvider(defaultChainId));\n  useEffect(() => {\n    if (library !== refEth.current) {\n      setProvider(library || simpleRpcProvider(defaultChainId));\n      refEth.current = library;\n    }\n  }, [library]);\n\n  return { library: provider, chainId: defaultChainId, ...web3React };\n};\n\nexport default useActiveWeb3React;\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { Button } from 'antd';\n\nimport { useEagerConnect, useInactiveListener } from '@/dapp/hooks';\nimport { injected, connectorLocalStorageKey } from '@/dapp/connectors';\nimport { SearchOutlined } from '@ant-design/icons';\nimport useActiveWeb3React from '@/hooks/useActiveWeb3React';\n\nexport default function Header() {\n  const { connector, account, chainId, activate, deactivate } = useActiveWeb3React();\n  const [activatingConnector, setActivatingConnector] = useState<any>();\n  useEffect(() => {\n    if (activatingConnector && activatingConnector === connector) {\n      setActivatingConnector(undefined);\n    }\n  }, [activatingConnector, connector]);\n\n  const triedEager = useEagerConnect();\n\n  useInactiveListener(!triedEager || !!activatingConnector);\n\n  const getAccount = useMemo(() => {\n    if (account) {\n      return account.substring(0, 6) + '...' + account.substring(account.length - 12, account.length);\n    }\n    return '';\n  }, [account]);\n  return (\n    <div>\n      <div className=\"flex justify-between items-center\">\n        <div>\n          <img src=\"/imgaes/logo.png\" alt=\"\" className=\"w-12 h-12\" />\n        </div>\n\n        <div>\n          {account ? (\n            <Button\n              onClick={() => {\n                deactivate();\n                localStorage.setItem(connectorLocalStorageKey, '');\n              }}\n              type=\"primary\"\n              icon={<SearchOutlined />}\n            >\n              {getAccount}\n            </Button>\n          ) : (\n            <Button\n              onClick={() => {\n                activate(injected);\n                localStorage.setItem(connectorLocalStorageKey, String(chainId));\n              }}\n              type=\"primary\"\n              icon={<SearchOutlined />}\n            >\n              Connect Wallet\n            </Button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { useWeb3React } from '@web3-react/core';\nimport { useState, useEffect } from 'react';\n\nimport { injected, connectorLocalStorageKey } from './connectors';\n\nexport function useEagerConnect() {\n  const { activate, active } = useWeb3React();\n\n  const [tried, setTried] = useState(false);\n\n  useEffect(() => {\n    injected.isAuthorized().then((isAuthorized: boolean) => {\n      const hasSignedIn = window.localStorage.getItem(connectorLocalStorageKey);\n      if (isAuthorized && hasSignedIn) {\n        activate(injected, undefined, true).catch(() => {\n          setTried(true);\n        });\n      }\n      // else if (isMobile() && window.ethereum && hasSignedIn) {\n      //   activate(injected, undefined, true).catch(() => {\n      //     setTried(true);\n      //   });\n      // }\n      else {\n        setTried(true);\n      }\n    });\n  }, []); // intentionally only running on mount (make sure it's only mounted once :))\n\n  // if the connection worked, wait until we get confirmation of that to flip the flag\n  useEffect(() => {\n    if (!tried && active) {\n      setTried(true);\n    }\n  }, [tried, active]);\n\n  return tried;\n}\nexport function useInactiveListener(suppress = false) {\n  const { active, error, activate } = useWeb3React();\n\n  useEffect((): any => {\n    const { ethereum } = window as any;\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\n      const handleConnect = () => {\n        console.log(\"Handling 'connect' event\");\n        activate(injected);\n      };\n      const handleChainChanged = (chainId: string | number) => {\n        console.log(\"Handling 'chainChanged' event with payload\", chainId);\n        activate(injected);\n      };\n      const handleAccountsChanged = (accounts: string[]) => {\n        console.log(\"Handling 'accountsChanged' event with payload\", accounts);\n        if (accounts.length > 0) {\n          activate(injected);\n        }\n      };\n      const handleNetworkChanged = (networkId: string | number) => {\n        console.log(\"Handling 'networkChanged' event with payload\", networkId);\n        activate(injected);\n      };\n\n      ethereum.on('connect', handleConnect);\n      ethereum.on('chainChanged', handleChainChanged);\n      ethereum.on('accountsChanged', handleAccountsChanged);\n      ethereum.on('networkChanged', handleNetworkChanged);\n\n      return () => {\n        if (ethereum.removeListener) {\n          ethereum.removeListener('connect', handleConnect);\n          ethereum.removeListener('chainChanged', handleChainChanged);\n          ethereum.removeListener('accountsChanged', handleAccountsChanged);\n          ethereum.removeListener('networkChanged', handleNetworkChanged);\n        }\n      };\n    }\n  }, [active, error, suppress, activate]);\n}\n","import React, { useEffect, useMemo, useState } from 'react';\nimport copy from 'copy-to-clipboard';\nimport { message } from 'antd';\n\nexport default function Footer() {\n  return (\n    <div className=\"text-center  pb-4 font-bold\">\n      <div className=\"text-2xl\">ETND</div>\n    </div>\n  );\n}\n","import { ChainId } from './chainId';\n\nexport default {\n  multiTransfer: {\n    [ChainId.ETND]: '0x367B7468D0E1aA2cF4d37ACaCB1e9C8493A8497c',\n  },\n};\n","import { ChainId } from './chainId';\n\nexport default ChainId.ETND;\n","import addresses from '@/config/constants/contracts';\nimport defaultChainId from '@/config/constants/defaultChainId';\nimport { Address } from '@/config/constants/types';\n\nexport const getAddress = (address: Address, chainId: number): string => {\n  return address[chainId] ? address[chainId] : address[defaultChainId];\n};\n\nexport const getMultiTransferAddress = (chainId) => {\n  return getAddress(addresses.multiTransfer, chainId);\n};\n","import { getAddress } from '@ethersproject/address';\n\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value);\n  } catch {\n    return false;\n  }\n}\n","import useActiveWeb3React from './useActiveWeb3React';\nimport { useMemo } from 'react';\nimport { getProviderOrSigner } from '../utils';\nimport { AddressZero } from '@ethersproject/constants';\nimport { Contract } from '@ethersproject/contracts';\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers';\nimport { getMultiTransferAddress } from '@/utils/addressHelpers';\nimport bep20TransferAbi from '@/config/abi/erc20Transfer.json';\nimport bep20Abi from '@/config/abi/erc20.json';\nimport { isAddress } from '@/utils/address';\n\nexport const useERC20 = (address: string, withSignerIfPossible = true) => {\n  return useContract(address, bep20Abi, withSignerIfPossible);\n};\n\nexport function useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\n  const { library, account } = useActiveWeb3React();\n  return useMemo(() => {\n    if (!address || address === AddressZero || !ABI || !library) return null;\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined);\n    } catch (error) {\n      console.error('Failed to get contract', error);\n      return null;\n    }\n  }, [address, ABI, library, withSignerIfPossible, account]);\n}\n\nexport function useBep20TransferContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React();\n  return useContract(getMultiTransferAddress(chainId), bep20TransferAbi, withSignerIfPossible);\n}\n\n// account is optional\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`);\n  }\n  return new Contract(address, ABI, getProviderOrSigner(library, account));\n}\n","import { JsonRpcSigner, Web3Provider } from '@ethersproject/providers';\n// account is not optional\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked();\n}\n// account is optional\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library;\n}\n","import BigNumber from 'bignumber.js';\nimport { BigNumber as EthersBigNumber } from '@ethersproject/bignumber';\n\nexport const BIG_ZERO = new BigNumber(0);\nexport const BIG_ONE = new BigNumber(1);\nexport const BIG_NINE = new BigNumber(9);\nexport const BIG_TEN = new BigNumber(10);\n\nexport const ethersToSerializedBigNumber = (ethersBn: EthersBigNumber): SerializedBigNumber => ethersToBigNumber(ethersBn).toJSON();\n\nexport const ethersToBigNumber = (ethersBn: EthersBigNumber): BigNumber => new BigNumber(ethersBn.toString());\n","import BigNumber from 'bignumber.js';\nimport { BigNumber as EthersBigNumber } from '@ethersproject/bignumber';\nimport { formatUnits } from '@ethersproject/units';\nimport { BIG_TEN } from './bigNumber';\n\n/**\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport const getDecimalAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).times(BIG_TEN.pow(decimals));\n};\n\nexport const getBalanceAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).dividedBy(BIG_TEN.pow(decimals));\n};\n\n/**\n * This function is not really necessary but is used throughout the site.\n */\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  return getBalanceAmount(balance, decimals).toNumber();\n};\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18, displayDecimals?: number) => {\n  return getBalanceAmount(balance, decimals).toFixed(displayDecimals);\n};\n\n// export const formatNumber = (number: number, minPrecision = 2, maxPrecision = 2) => {\n//   const options = {\n//     minimumFractionDigits: minPrecision,\n//     maximumFractionDigits: maxPrecision,\n//   }\n//   return number.toLocaleString(undefined, options)\n// }\n\n// /**\n//  * Method to format the display of wei given an EthersBigNumber object\n//  * Note: does NOT round\n//  */\nexport const formatBigNumber = (number: EthersBigNumber, displayDecimals = 18, decimals = 18) => {\n  const remainder = number.mod(EthersBigNumber.from(10).pow(decimals - displayDecimals));\n  return formatUnits(number.sub(remainder), decimals);\n};\n\n// /**\n//  * Method to format the display of wei given an EthersBigNumber object with toFixed\n//  * Note: rounds\n//  */\nexport const formatBigNumberToFixed = (number: EthersBigNumber, displayDecimals = 18, decimals = 18) => {\n  const formattedString = formatUnits(number, decimals);\n  return (+formattedString).toFixed(displayDecimals);\n};\n\n// /**\n//  * Formats a FixedNumber like BigNumber\n//  * i.e. Formats 9763410526137450427.1196 into 9.763 (3 display decimals)\n//  */\n// export const formatFixedNumber = (number: FixedNumber, displayDecimals = 18, decimals = 18) => {\n//   // Remove decimal\n//   const [leftSide] = number.toString().split('.')\n//   return formatBigNumber(EthersBigNumber.from(leftSide), displayDecimals, decimals)\n// }\n\n// export const formatLocalisedCompactNumber = (number: number): string => {\n//   const codeFromStorage = getLanguageCodeFromLS()\n//   return new Intl.NumberFormat(codeFromStorage, {\n//     notation: 'compact',\n//     compactDisplay: 'long',\n//     maximumSignificantDigits: 2,\n//   }).format(number)\n// }\n\n// export default formatLocalisedCompactNumber\n","import ETND from './ETND.json';\nimport { ChainId } from '../constants/chainId';\nimport { Token } from '@/config/constants/types';\n\ntype TokenList = { [chainId: number]: Token[] };\n\nconst TOKENLIST: TokenList = {\n  [ChainId.ETND]: ETND,\n};\n\nexport default TOKENLIST;\n","import { ChainId } from '@/config/constants/chainId';\nimport { Token } from '@/config/constants/types';\ntype NativeMap = { [chainId: number]: Token };\nexport const NATIVE: NativeMap = {\n  [ChainId.ETND]: {\n    name: 'ETND Token',\n    symbol: 'ETND',\n    address: '',\n    chainId: ChainId.ETND,\n    decimals: 18,\n    logoURI: 'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/binance/info/logo.png',\n  },\n};\n\nexport const getNative = (chainId) => {\n  return NATIVE[chainId] ? NATIVE[chainId] : NATIVE[ChainId.ETND];\n};\n","import { Token } from '@/config/constants/types';\nimport { NATIVE } from '@/config/constants/native';\nexport const isEth = (token: Token, chainId: number) => {\n  const native = NATIVE[chainId];\n  if (native && token.address === native.address && token.symbol.toLowerCase() === native.symbol.toLowerCase()) {\n    return true;\n  }\n  return false;\n};\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { Button, Select, Input, Slider, Table, message } from 'antd';\nimport { ArrowLeftOutlined } from '@ant-design/icons';\nimport { useERC20, useBep20TransferContract } from '../hooks/useContract';\nimport { getBalanceNumber, getDecimalAmount, formatBigNumberToFixed } from '@/utils/formatBalance';\nimport BigNumber from 'bignumber.js';\nimport { BIG_ZERO } from '@/utils/bigNumber';\nimport { ethersToBigNumber } from '@/utils/bigNumber';\nimport { getMultiTransferAddress } from '@/utils/addressHelpers';\nimport { MaxUint256 } from '@ethersproject/constants';\nimport { utils } from 'ethers';\nimport DEFAULT_TOKEN_LIST from '@/config/tokens';\nimport { Token } from '@/config/constants/types';\nimport { isEth } from '@/utils/isEth';\nimport { NATIVE } from '@/config/constants/native';\nimport useActiveWeb3React from '@/hooks/useActiveWeb3React';\nimport { isAddress } from '@/utils/address';\nimport { Erc20 } from '@/config/abi/types';\nconst { Option } = Select;\nconst { TextArea } = Input;\ninterface ISetInfo {\n  amount: string;\n  token: Token;\n  addressList: string[];\n  addressInput: string;\n  tokenList: Token[];\n  setAmount: (amount: string) => void;\n  setToken: (token: Token) => void;\n  setAddressList: (addressList: string[]) => void;\n  setStep: (step: number) => void;\n  setTokenList: (tokenList: Token[]) => void;\n  setAddressInput?: (addressInput: string) => void;\n}\ninterface ITransferDetail {\n  amount: string;\n  token: Token;\n  addressList: string[];\n  setAddressList: (addressList: string[]) => void;\n  setStep: (step: number) => void;\n  setAddressInput?: (addressInput: string) => void;\n}\nfunction SetInfo(prop: ISetInfo) {\n  const { account, chainId } = useActiveWeb3React();\n  const { amount, addressList, token, setAmount, setToken, tokenList, addressInput, setAddressInput, setTokenList, setAddressList, setStep } = prop;\n\n  const [searchValue, setSearchValue] = useState<string>('');\n\n  const address = useMemo(() => {\n    return isAddress(searchValue) ? searchValue : '';\n  }, [searchValue]);\n\n  const bep20Contract = useERC20(address, false);\n\n  useEffect(() => {\n    const getErc20Info = async () => {\n      if (bep20Contract as Erc20) {\n        try {\n          const index = tokenList.findIndex((item) => item.address === isAddress(searchValue));\n          if (index !== -1) {\n            return;\n          }\n          const symbol = await bep20Contract.symbol();\n          const name = await bep20Contract.name();\n          const decimals = await bep20Contract.decimals();\n          const token = { symbol, name, decimals: decimals.toString(), address, chainId };\n          setTokenList([...tokenList, token]);\n        } catch (e) {\n          // setTokenList(tokenList);\n        }\n      }\n    };\n    getErc20Info();\n  }, [bep20Contract]);\n\n  const errAddressList = useMemo(() => {\n    const err = [];\n    addressList.forEach((item, index) => {\n      if (isAddress(item) !== item && item !== '') {\n        err.push({ address: item, index });\n      }\n    });\n    return err.length ? (\n      <div className=\"border rounded-md border-red-500 text-red-500 mt-4 px-4 py-2\">\n        {err.map((item) => {\n          return (\n            <div key={item.index} className=\"\">\n              <div>\n                第{item.index + 1}行 {item.address} 不是一个有效的钱包地址\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    ) : (\n      ''\n    );\n  }, [addressList]);\n\n  return (\n    <div>\n      <div className=\"flex text-primary \">\n        <div className=\"flex-1  overflow-hidden\">\n          <div className=\"text-primary font-bold py-4\">选择代币</div>\n          <Select\n            bordered={false}\n            size=\"large\"\n            showSearch\n            optionLabelProp=\"children\"\n            dropdownClassName=\"flex-1 px-4\"\n            filterOption={(e, currentItem) => {\n              const token = tokenList.find((item) => item.address === currentItem.value);\n              const searchValue = e.toLocaleLowerCase();\n              if (\n                token.symbol.toLocaleLowerCase().includes(searchValue) ||\n                token.name.toLocaleLowerCase().includes(searchValue) ||\n                token.address.toLocaleLowerCase().includes(searchValue)\n              ) {\n                return true;\n              }\n              return false;\n            }}\n            onSearch={(e) => {\n              //\n              setSearchValue(e);\n            }}\n            placeholder=\"请选择\"\n            value={{ value: token.address }}\n            className=\"bg-gray-100 w-full\"\n            onChange={(address: any) => {\n              setToken(tokenList.find((item) => item.address === address));\n            }}\n          >\n            {tokenList.length &&\n              tokenList.map((item, index) => {\n                return (\n                  <Option key={item.address + item.name + item.symbol} value={item.address}>\n                    <div className=\"\">\n                      <span className=\"token-symbol\">{item.symbol}</span> <span className=\"char\">-</span>\n                      {item.address ? item.address : item.name}\n                    </div>\n                  </Option>\n                );\n              })}\n          </Select>\n        </div>\n        <div className=\"w-16 ml-4\">\n          <div className=\"py-4 font-bold\">位数</div>\n          <div className=\"p-2 text-base bg-gray-100\">{token.decimals}</div>\n        </div>\n      </div>\n      <div>\n        <div className=\"py-4 font-bold\">收币地址</div>\n        <div className=\"flex bg-gray-100 text-sm\">\n          <div className=\"py-1 px-4\">\n            {addressList.length\n              ? addressList.map((item, index) => {\n                  return <div key={index}>{index + 1}</div>;\n                })\n              : 1}\n          </div>\n          <TextArea\n            className=\"text-sm\"\n            bordered={false}\n            value={addressInput}\n            onChange={(e) => {\n              setAddressInput(e.target.value);\n              if (e.target.value == '') {\n                setAddressList([]);\n                return;\n              }\n              const addressList = e.target.value.split('\\n');\n              setAddressList(addressList);\n            }}\n            rows={4}\n          />\n        </div>\n      </div>\n      {errAddressList}\n\n      <div className=\"\">\n        <div className=\"my-4 flex justify-between items-center\">\n          <div className=\"flex items-center\">\n            <div className=\"mr-4  font-bold\">每个地址发送</div>\n            <Input\n              value={amount}\n              onChange={(e) => {\n                setAmount(e.target.value);\n              }}\n              className=\"bg-gray-100\"\n              style={{ width: '100px' }}\n              bordered={false}\n            />\n            <div className=\"ml-2 font-bold\">{token.symbol}</div>\n          </div>\n          <div\n            className=\"text-gray-400 cursor-pointer\"\n            onClick={() => {\n              setAddressInput('0x742606C36817f6BeB1eD806838E57217260dF9F3');\n              setAddressList(['0x742606C36817f6BeB1eD806838E57217260dF9F3']);\n            }}\n          >\n            查看例子\n          </div>\n        </div>\n      </div>\n\n      <Button\n        type=\"primary\"\n        onClick={() => {\n          if (!account) {\n            message.error('请先连接钱包');\n            return;\n          }\n          setStep(1);\n        }}\n      >\n        下一步\n      </Button>\n    </div>\n  );\n}\n\nfunction TransferDetail(prop: ITransferDetail) {\n  const { account, library, chainId } = useActiveWeb3React();\n  const { amount, addressList, token, setAddressList, setAddressInput, setStep } = prop;\n\n  const [gasFee, setGasFee] = useState<string>('0');\n  const [isApproved, setIsApproved] = useState<boolean>(isEth(token, chainId) ? true : false);\n  const [bnbBalance, setBalance] = useState<BigNumber>(BIG_ZERO);\n  const [tokenBalance, setTokenBalance] = useState<BigNumber>(BIG_ZERO);\n  const [errorMessage, setErrorMessage] = useState<string>('');\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const bep20Contract = useERC20(token.address);\n  const bep20TransferContract = useBep20TransferContract();\n\n  useEffect(() => {\n    const estimateGas = async () => {\n      try {\n        const tokenAmount = getDecimalAmount(new BigNumber(amount), token.decimals);\n        const ethAmount = tokenAmount.times(filterAddress.length);\n        if (isEth(token, chainId)) {\n          const _gasFee = await bep20TransferContract.estimateGas.batch_transfer_bnb(filterAddress, tokenAmount.toString(), {\n            value: ethAmount.toString(),\n          });\n          setGasFee(formatBigNumberToFixed(_gasFee, 6, 9));\n        } else {\n          if (isApproved) {\n            const _gasFee = await bep20TransferContract.estimateGas.batch_transfer(token.address, filterAddress, tokenAmount.toString());\n            setGasFee(formatBigNumberToFixed(_gasFee, 6, 9));\n          }\n        }\n        setErrorMessage('');\n      } catch (callError: any) {\n        setErrorMessage(callError.error?.message || callError.reason || callError.data?.message || callError.message);\n      }\n    };\n    estimateGas();\n  }, [addressList, isApproved]);\n\n  // 转账地址列表\n  const filterAddress = useMemo(() => {\n    return addressList.filter((item) => {\n      return item !== '';\n    });\n  }, [addressList]);\n\n  // 表格详情\n  const getTransferList = useMemo(() => {\n    return filterAddress.map((item, index) => {\n      return { to: item, amount, ...token, key: index };\n    });\n  }, [filterAddress]);\n\n  const columns = [\n    {\n      title: '钱包地址',\n      dataIndex: 'to',\n      key: 'to',\n    },\n    {\n      title: '数量',\n      dataIndex: 'amount',\n      key: 'amount',\n      width: '20%',\n      render: (amount: any, record: any) => (\n        <div>\n          {amount} {record.symbol}\n        </div>\n      ),\n    },\n    {\n      width: '20%',\n      title: '操作',\n      key: 'action',\n      render: (text: any, record: any) => (\n        <Button\n          danger\n          onClick={() => {\n            const _addressList = [...addressList];\n            _addressList.splice(record.key, 1);\n            setAddressList(_addressList);\n            setAddressInput(_addressList.join('\\n'));\n          }}\n        >\n          移除\n        </Button>\n      ),\n    },\n  ];\n  const getBalance = async () => {\n    const balance = await library.getBalance(account);\n\n    setBalance(ethersToBigNumber(balance));\n    if (isEth(token, chainId)) {\n      const tokenBalance = balance;\n      setTokenBalance(ethersToBigNumber(tokenBalance));\n    } else {\n      const tokenBalance = await bep20Contract.balanceOf(account);\n      setTokenBalance(ethersToBigNumber(tokenBalance));\n    }\n  };\n  const getAllowance = async () => {\n    if (isEth(token, chainId)) {\n      return;\n    }\n    const response = await bep20Contract.allowance(account, getMultiTransferAddress(chainId));\n    const currentAllowance = ethersToBigNumber(response);\n    setIsApproved(currentAllowance.gt(0));\n  };\n  useEffect(() => {\n    if (!account) {\n      return;\n    }\n\n    getBalance();\n    getAllowance();\n  }, [token, account]);\n\n  const getAllAmount = useMemo(() => {\n    return new BigNumber(getTransferList.length).times(amount).toString();\n  }, [getTransferList]);\n\n  return (\n    <div>\n      <div className=\"overflow-x-hidden\">\n        <div className=\"py-4 font-bold\">地址列表</div>\n        <Table columns={columns} dataSource={getTransferList} pagination={false} scroll={{ y: 300 }} />\n      </div>\n      <div>\n        <div className=\"py-4 font-bold\">摘要</div>\n        <div className=\"bg-gray-100 flex flex-wrap \">\n          <div className=\"w-3/6 p-4\">\n            <div>{getTransferList.length}</div>\n            <div>地址总数</div>\n          </div>\n          <div className=\"w-3/6 p-4\">\n            <div>\n              {getAllAmount} {token.symbol}\n            </div>\n            <div>代币发送总数</div>\n          </div>\n          <div className=\"w-3/6 p-4\">\n            <div>{getTransferList.length}</div>\n            <div>交易总数</div>\n          </div>\n          <div className=\"w-3/6 p-4\">\n            <div>\n              {getBalanceNumber(tokenBalance, token.decimals).toFixed(6)} {token.symbol}\n            </div>\n            <div>代币余额</div>\n          </div>\n          <div className=\"w-3/6 p-4\">\n            <div>\n              {gasFee} {NATIVE[chainId]?.symbol}\n            </div>\n            <div>预估手续费</div>\n          </div>\n          <div className=\"w-3/6 p-4\">\n            <div>\n              {getBalanceNumber(bnbBalance).toFixed(6)} {NATIVE[chainId]?.symbol}\n            </div>\n            <div>您的余额</div>\n          </div>\n        </div>\n      </div>\n      <div className=\"text-red-400\">{errorMessage}</div>\n      <div className=\"flex mt-4\">\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            setStep(0);\n          }}\n          className=\"mr-4\"\n          icon={<ArrowLeftOutlined />}\n        />\n\n        {isApproved ? (\n          <Button\n            type=\"primary\"\n            loading={loading}\n            onClick={async () => {\n              try {\n                let tx;\n                setLoading(true);\n                const tokenAmount = getDecimalAmount(new BigNumber(amount), token.decimals);\n                const ethAmount = tokenAmount.times(filterAddress.length);\n                if (isEth(token, chainId)) {\n                  tx = await bep20TransferContract.batch_transfer_bnb(filterAddress, tokenAmount.toString(), {\n                    value: ethAmount.toString(),\n                  });\n                } else {\n                  tx = await bep20TransferContract.batch_transfer(token.address, filterAddress, tokenAmount.toString());\n                }\n                await tx.wait();\n                setLoading(false);\n                getBalance();\n                message.success('转账成功');\n              } catch (callError: any) {\n                message.error(callError.reason || callError.data?.message || callError.message);\n                setLoading(false);\n              }\n            }}\n          >\n            发送\n          </Button>\n        ) : (\n          <Button\n            type=\"primary\"\n            loading={loading}\n            onClick={async () => {\n              try {\n                setLoading(true);\n                const tx = await bep20Contract.approve(getMultiTransferAddress(chainId), MaxUint256);\n                const receipt = await tx.wait();\n                setLoading(false);\n                getBalance();\n                getAllowance();\n                message.success('授权成功');\n              } catch (callError: any) {\n                message.error(callError.reason || callError.data?.message || callError.message);\n                setLoading(false);\n              }\n            }}\n          >\n            授权\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default function BatchTransfer() {\n  const { chainId } = useActiveWeb3React();\n  const [setp, setStep] = useState<number>(0);\n  const [amount, setAmount] = useState<string>('1');\n  const [addressList, setAddressList] = useState<string[]>([]);\n  const [addressInput, setAddressInput] = useState<string>('');\n  const [token, setToken] = useState<Token>({ address: '', name: '', symbol: '', decimals: 18, chainId });\n  const [tokenList, setTokenList] = useState<Token[]>([]);\n\n  const handleAmount = (amount: string) => {\n    setAmount(amount);\n  };\n  const handleToken = (token: Token) => {\n    setToken(token);\n  };\n  const handleAddressList = (addressList: string[]) => {\n    setAddressList(addressList);\n  };\n\n  const handleTokenList = (tokenList: Token[]) => {\n    setTokenList(tokenList);\n  };\n  const handleStep = (step: number) => {\n    setStep(step);\n  };\n  const handleAddressInput = (addressInput: string) => {\n    setAddressInput(addressInput);\n  };\n\n  useEffect(() => {\n    setStep(0);\n    if (DEFAULT_TOKEN_LIST[chainId]) {\n      let _tokenList = [...DEFAULT_TOKEN_LIST[chainId]];\n      _tokenList.sort((t1, t2) => {\n        return t1.symbol.toLowerCase() < t2.symbol.toLowerCase() ? -1 : 1;\n      });\n      _tokenList = [NATIVE[chainId], ..._tokenList];\n      setTokenList(_tokenList);\n      setToken(NATIVE[chainId]);\n    } else {\n      setTokenList([]);\n      setToken({ address: '', name: '', symbol: '', decimals: 18, chainId: chainId });\n    }\n  }, [chainId]);\n  return (\n    <div className=\"text-primary bg-white mx-auto max-w-900  p-4 my-6\" style={{ width: '90%' }}>\n      <div className=\"text-base text-primary font-bold\">批量发送代币</div>\n      {setp == 0 ? (\n        <SetInfo\n          amount={amount}\n          token={token}\n          tokenList={tokenList}\n          addressList={addressList}\n          addressInput={addressInput}\n          setAddressInput={handleAddressInput}\n          setAmount={handleAmount}\n          setToken={handleToken}\n          setAddressList={handleAddressList}\n          setTokenList={handleTokenList}\n          setStep={handleStep}\n        />\n      ) : (\n        <TransferDetail\n          amount={amount}\n          token={token}\n          addressList={addressList}\n          setAddressInput={handleAddressInput}\n          setAddressList={handleAddressList}\n          setStep={handleStep}\n        />\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport { Web3ReactProvider } from '@web3-react/core';\nimport { Web3Provider } from '@ethersproject/providers';\n\nimport { POLLING_INTERVAL } from './dapp/connectors';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n\nimport BatchTransfer from './page/BatchTransfer';\n\nimport './App.css';\nexport function getLibrary(provider: any): Web3Provider {\n  const library = new Web3Provider(provider);\n  library.pollingInterval = POLLING_INTERVAL;\n  return library;\n}\n\nexport default function APP() {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <div className=\"App flex flex-col\">\n        <Header></Header>\n        <BatchTransfer />\n        <Footer></Footer>\n      </div>\n    </Web3ReactProvider>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}